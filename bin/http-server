#!/usr/bin/env node

var colors = require('colors'),
    httpServer = require('../lib/http-server'),
    argv = require('optimist').argv;

if (argv.h || argv.help) {
  console.log([
    "usage: http-server [path] [options]",
    "",
    "options:",
    "  -p                 Port to use [8080]",
    "  -g                 Group id to drop privileges to",
    "  -u                 User id to drop privileges to",
    "  -a                 Address to use [0.0.0.0]",
    "  -i                 Display autoIndex [true]",
    "  -s --silent        Suppress log messages from output",
    "  -h --help          Print this list and exit.",
  ].join('\n'));
  process.exit();
}

var port = argv.p || 8080,
    host = argv.a || '0.0.0.0',
    user = argv.u || false,
    group = argv.g || false,
    log = (argv.s || argv.silent) ? (function () {}) : console.log;

var options = {
  root: argv._[0],
  autoIndex: argv.i,
  cache: argv.c
};

function onListening() {
  log('Starting up http-server, serving '.yellow
    + server.root.cyan
    + ' on port: '.yellow
    + port.toString().cyan);
    
  if (user || group) {
    try {
      if (group) {
        console.log('trying to switch to group ' + group);
        process.setgid(group);
      }
      if (user){
        console.log('trying to switch to user ' + user);
        process.setuid(user);
      }
      console.log('New uid: ' + process.getuid() + ' and gid: ' + process.getgid());
    }
    catch (err) {
      console.log('failed to switch permissions - if http-server was run as root, it may still have root privileges');
    }
  }
  log('Hit CTRL-C to stop the server');
}

var server = httpServer.createServer(options);
server.listen(port, host, onListening);



process.on('SIGINT', function () {
  log('http-server stopped.'.red);
  process.exit();
});
